{"version":3,"sources":["pics/Onboarding_01.png","pics/Onboarding_02.png","components/Onboarding_01.js","components/Onboarding_02.js","components/Onboarding_03.js","components/ViewPagerAll.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Onboarding_01","style","height","className","alt","width","src","onboarding1","alignContent","textAlign","marginTop","position","bottom","onClick","this","props","skipAction","float","nextAction","Component","Onboarding_02","onborading2","minHeight","Onboarding_03","backgroundColor","fontSize","color","borderRadius","ViewPagerAll","track","next","boxSizing","tag","ref","c","viewsToShow","App","state","title","post","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"4FAAAA,EAAOC,QAAU,IAA0B,2C,mBCA3CD,EAAOC,QAAU,IAA0B,2C,kPCGtBC,E,iLAEb,OACI,yBAAKC,MAAO,CAACC,OAAO,UAEhB,yBAAKC,UAAU,UACX,yBAAKC,IAAI,WAAWC,MAAM,OAAOC,IAAKC,IAAaJ,UAAU,eAEjE,qCAAKA,UAAU,YAAYF,MAAO,CAACO,aAAa,SAAUC,UAAU,SAASJ,MAAM,QAASK,UAAU,SAAtG,YAAyH,SACrH,wDACA,yZAEJ,yBAAKT,MAAO,CAACC,OAAO,OAAQG,MAAM,QAASF,UAAU,UACrD,yBAAKF,MAAO,CAACU,SAAS,WAAYC,OAAO,GAAIT,UAAU,aACnD,4BAAQF,MAAO,GAAIY,QAASC,KAAKC,MAAMC,YAAvC,QACA,4BAAQf,MAAO,CAACgB,MAAM,SAAUJ,QAASC,KAAKC,MAAMG,YAApD,gB,GAfuBC,a,iBCCtBC,E,iLAEb,OACI,yBAAKnB,MAAO,CAACC,OAAO,UAEhB,yBAAKC,UAAU,UACX,yBAAKC,IAAI,WAAWC,MAAM,OAAOC,IAAKe,IAAalB,UAAU,eAEjE,yBAAKF,MAAO,CAACO,aAAa,SAAUC,UAAU,SAASJ,MAAM,QAASK,UAAU,QAASP,UAAU,SAC/F,uFACA,wQAEJ,yBAAKF,MAAO,CAACqB,UAAU,OAAQnB,UAAU,UACzC,yBAAKF,MAAO,GAAIE,UAAU,aACtB,4BAAQF,MAAO,GAAIY,QAASC,KAAKC,MAAMG,YAAvC,QACA,4BAAQjB,MAAO,CAACgB,MAAM,SAAUJ,QAASC,KAAKC,MAAMG,YAApD,gB,GAfuBC,aCDtBI,E,iLAEb,OACI,yBAAKtB,MAAO,CAACO,aAAa,SAAUC,UAAU,SAASP,OAAO,UAE1D,yBAAKC,UAAU,UACX,yBAAKC,IAAI,WAAWC,MAAM,OAAOC,IAAKC,IAAaJ,UAAU,eAEjE,yBAAKF,MAAO,CAACI,MAAM,QAASK,UAAU,QAASP,UAAU,SACrD,yGACA,oPAEJ,yBAAKF,MAAO,CAACqB,UAAU,OAAQnB,UAAU,UACzC,yBAAKF,MAAO,CAACI,MAAM,QAASF,UAAU,QAClC,4BAAQF,MAAO,CAACI,MAAM,QAASH,OAAO,OAAQsB,gBAAgB,oBAAqBC,SAAS,OAAOC,MAAM,QAASC,aAAa,QAASxB,UAAU,UAAlJ,iB,GAduBgB,aCItBS,E,iLACT,IAAD,OACDV,EAAa,WACjB,EAAKW,MAAMC,QAOb,OACE,yBAAK7B,MAAO,CAAC8B,UAAU,eACrB,kBAAC,YAAD,CAAWC,IAAI,QACb,kBAAC,QAAD,CAAO7B,UAAU,SACf,kBAAC,QAAD,CACE8B,IAAK,SAAAC,GAAC,OAAK,EAAKL,MAAQK,GACxBC,YAAa,EAEbhC,UAAU,SAEV,kBAAC,OAAD,CAAMA,UAAU,QACd,kBAAC,EAAD,CAAea,WAhBR,WACjB,EAAKa,MAAMC,OACX,EAAKD,MAAMC,QAcsCZ,WAAYA,KAErD,kBAAC,OAAD,CAAMf,UAAU,QACd,kBAAC,EAAD,CAAee,WAAYA,KAE7B,kBAAC,OAAD,CAAMf,UAAU,QACd,kBAAC,EAAD,e,GA3B0BgB,aCDrBiB,E,2MAGnBC,MAAM,CACFC,MAAM,GACLC,KAAK,I,wEAWR,OACE,yBAAKpC,UAAU,OAOf,kBAAC,EAAD,W,GAxB2BgB,aCMbqB,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD6H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.0bf0719a.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Onboarding_01.2f00ad42.png\";","module.exports = __webpack_public_path__ + \"static/media/Onboarding_02.761208ae.png\";","import React, { Component } from 'react'\r\nimport onboarding1 from '../pics/Onboarding_01.png'\r\n\r\nexport default class Onboarding_01 extends Component {\r\n    render() {\r\n        return (\r\n            <div style={{height:\"100vh\"}}>\r\n            {/* pic up */}\r\n                <div className=\"partUp\">\r\n                    <img alt=\"firstPic\" width=\"100%\" src={onboarding1} className=\"pictureUp\"></img>\r\n                </div>\r\n                <div className=\"container\" style={{alignContent:\"center\", textAlign:\"center\",width:\"276pt\", marginTop:\"10px\"}} className=\"kituv\">\r\n                    <h3>סיוע</h3>\r\n                    <p>בקש מה שאתה רוצה מהאנשים הרלוונטיים שרוצים לעזור.רלוונטיים שרוצים לעזור.</p>\r\n                </div>\r\n                <div style={{height:\"100%\", width:\"100%\"}} className=\"space\"></div>\r\n                <div style={{position:\"relative\", bottom:0}} className=\"container\">\r\n                    <button style={{}} onClick={this.props.skipAction}>skip</button>\r\n                    <button style={{float:\"right\"}} onClick={this.props.nextAction}>--></button>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport onboarding1 from '../pics/Onboarding_01.png'\r\nimport onborading2 from \"../pics/Onboarding_02.png\";\r\n\r\nexport default class Onboarding_02 extends Component {\r\n    render() {\r\n        return (\r\n            <div style={{height:\"100vh\"}}>\r\n            {/* pic up */}\r\n                <div className=\"partUp\">\r\n                    <img alt=\"firstPic\" width=\"100%\" src={onborading2} className=\"pictureUp\"></img>\r\n                </div>\r\n                <div style={{alignContent:\"center\", textAlign:\"center\",width:\"276pt\", marginTop:\"10px\"}} className=\"kituv\">\r\n                    <h3>סגירת בקשה</h3>\r\n                    <p>עזרו לך? אפשר לסגור את הבקשה שלא יפנו אליך יותר</p>\r\n                </div>\r\n                <div style={{minHeight:\"20%\"}} className=\"space\"></div>\r\n                <div style={{}} className=\"container\">\r\n                    <button style={{}} onClick={this.props.nextAction}>skip</button>\r\n                    <button style={{float:\"right\"}} onClick={this.props.nextAction}>--></button>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport onboarding1 from '../pics/Onboarding_01.png'\r\n\r\nexport default class Onboarding_03 extends Component {\r\n    render() {\r\n        return (\r\n            <div style={{alignContent:\"center\", textAlign:\"center\",height:\"100vh\"}}>\r\n            {/* pic up */}\r\n                <div className=\"partUp\">\r\n                    <img alt=\"firstPic\" width=\"100%\" src={onboarding1} className=\"pictureUp\"></img>\r\n                </div>\r\n                <div style={{width:\"276pt\", marginTop:\"10px\"}} className=\"kituv\">\r\n                    <h3>מיקרו-התנדבות</h3>\r\n                    <p>רוצה לעזור בקטנה? אתם בוחרים בוחר למי ומתי</p>\r\n                </div>\r\n                <div style={{minHeight:\"20%\"}} className=\"space\"></div>\r\n                <div style={{width:\"100%\"}} className=\"btns\">\r\n                    <button style={{width:\"250pt\", height:\"48pt\", backgroundColor:\"rgb(80, 210, 194)\", fontSize:\"16pt\",color:\"white\", borderRadius:\"50pt\"}} className=\"signUp\">SING IN</button>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { ViewPager, Frame, Track, View } from \"react-view-pager\";\r\nimport Onboarding_01 from \"./Onboarding_01.js\";\r\nimport Onboarding_02 from './Onboarding_02'\r\nimport Onboarding_03 from './Onboarding_03'\r\n\r\n\r\nexport default class ViewPagerAll extends Component {\r\n  render() {\r\n    const nextAction = () => {\r\n      this.track.next();\r\n    };\r\n    const skipAction = () => {\r\n      this.track.next();\r\n      this.track.next();\r\n    };\r\n\r\n    return (\r\n      <div style={{boxSizing:\"border-box\"}}>\r\n        <ViewPager tag=\"main\">\r\n          <Frame className=\"frame\">\r\n            <Track\r\n              ref={c => (this.track = c)}\r\n              viewsToShow={1}\r\n              // infinite\r\n              className=\"track\"\r\n            >\r\n              <View className=\"view\">\r\n                <Onboarding_01 skipAction={skipAction} nextAction={nextAction} />\r\n              </View>\r\n              <View className=\"view\">\r\n                <Onboarding_02 nextAction={nextAction} />\r\n              </View>\r\n              <View className=\"view\">\r\n                <Onboarding_03 />\r\n              </View>\r\n            </Track>\r\n          </Frame>\r\n        </ViewPager>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport React, { Component } from 'react'\nimport ViewPagerAll from './components/ViewPagerAll'\n\n\nexport default class App extends Component {\n\n\n  state={\n      title:[],\n       post:[]\n  }\n  \n  \n  render() {\n    const addNewPost=(title, post)=>{\n      this.setState({title:title, post:post})\n      \n      console.log(this.state)\n    }\n    \n    return (\n      <div className=\"App\">\n      {/* <ListOfPosts/> */}\n      {/* <Home1/> */}\n      {/* <NewRequestFinal_01/> */}\n      {/* <NewRequest_02/> */}\n      {/* <HomeScreen/> */}\n      {/* <OnboardingMain/> */}\n      <ViewPagerAll/>\n    {/* <NewRequest_01 addNewPost={addNewPost}/> */}\n\n      </div>\n    )\n  }\n}\n\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}